{"version":3,"file":"static/js/752.49cdcccf.chunk.js","mappings":"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","sources":["webpack://social-network/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://social-network/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://social-network/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"forest\":\"ProfileInfo_forest__z9fbL\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__9LEMG\",\"userPhoto\":\"ProfileInfo_userPhoto__mWaP+\",\"contact\":\"ProfileInfo_contact__jnjkK\"};","import React, {useEffect, useState} from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n              <b>Status:</b>\r\n                <span onDoubleClick={activateEditMode}>{props.status || '----'}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input autoFocus={true}\r\n                       onBlur={deactivateEditMode}\r\n                       onChange={onStatusChange}\r\n                       value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport {createField, Input, Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport s from './ProfileInfo.module.css';\r\nimport style from \"../../common/FormsControls/FormsControls.module.css\";\r\n\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile,error}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <div>\r\n            <button> save</button>\r\n        </div>\r\n        {error && <div className={style.formSummaryError}>\r\n            {error}\r\n        </div>\r\n        }\r\n        <div>\r\n            <b>Full name</b>:\r\n            {createField('Full name', [], 'fullName', Input)}\r\n        </div>\r\n        <div>\r\n            <b>Looking for job</b>:\r\n            {createField('', [], 'lookingForAJob', Input, {type: 'checkbox'})}\r\n        </div>\r\n        <div>\r\n            <b>My professional skills</b>:\r\n            {createField('My professional skills', [], 'lookingForAJobDescription', Textarea)}\r\n        </div>\r\n\r\n        <div>\r\n            <b>About me</b>:\r\n            {createField('About me', [], 'aboutMe', Textarea)}\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>:{Object.keys(profile.contacts).map(key => {\r\n            return <div key={key} className={s.contact}>\r\n                <b>{key}:{createField(key, [], 'contacts.' + key, Input)}</b>\r\n            </div>\r\n        })}\r\n        </div>\r\n    </form>\r\n}\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm;","import React, {useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport userPhoto from \"../../../assets/imges/user.png\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(\r\n            () => {\r\n                setEditMode(false)\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <div className={s.descriptionBlock}>\r\n                    <img src={profile.photos.large || userPhoto} className={s.mainPhoto}/>\r\n                    {isOwner && <input type={'file'} onChange={onMainPhotoSelected}/>}\r\n                    {editMode\r\n                        ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}/>\r\n                        : <ProfileData goToEditMode={() => {\r\n                            setEditMode(true)\r\n                        }} profile={profile} isOwner={isOwner}/>}\r\n                    <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    return <div>\r\n        {isOwner && <div>\r\n            <button onClick={goToEditMode}>edit</button>\r\n        </div>}\r\n        <div>\r\n            <b>Full name</b>: {profile.fullName}\r\n        </div>\r\n        <div>\r\n            <b>Looking for job</b>: {profile.lookingForAJob ? 'yes' : 'no'}\r\n        </div>\r\n        {profile.lookingForAJob &&\r\n        <div>\r\n            <b>My professional skills</b>: {profile.lookingForAJobDescription}\r\n        </div>\r\n        }\r\n        <div>\r\n            <b>About me</b>:{profile.aboutMe}\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>:{Object.keys(profile.contacts).map(key => {\r\n            return <Contact contactTitle={key} contactValue={profile.contacts[key]}/>\r\n        })}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={s.contact}>\r\n        <b>{contactTitle}</b>:{contactValue}\r\n    </div>\r\n}\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__HY25q\",\"posts\":\"MyPosts_posts__hMTju\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__8RsHf\"};","import React from 'react';\r\nimport s from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n\r\n    return (\r\n        <div className={s.item}>\r\n            <img\r\n                src='https://media.wired.co.uk/photos/60c8730fa81eb7f50b44037e/3:2/w_3329,h_2219,c_limit/1521-WIRED-Cat.jpeg'\r\n                alt=''/>\r\n            {props.message}\r\n\r\n            <div>\r\n                <span>like</span>{props.likeCount}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name={'newPostText'} placeholder={'Post message'}\r\n                       validate={[required, maxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({form: 'ProfileAddNewPostForm'})(AddNewPostForm)\r\n\r\nconst MyPosts = React.memo(props => {\r\n    // console.log('RENDER');\r\n    let postsElements =\r\n        [...props.posts]\r\n            .reverse()\r\n            .map(p => <Post key={p.id} message={p.message} likeCount={p.likeCount}/>)\r\n\r\n    let newPostElements = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3> My posts</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator, } from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        },\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo savePhoto={props.savePhoto}\r\n                         isOwner={props.owner}\r\n                         profile={props.profile}\r\n                         status={props.status}\r\n                         saveProfile={props.saveProfile}\r\n                         updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login');\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     owner={!this.props.match.params.userId}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}\r\n                     savePhoto={this.props.savePhoto}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return (\r\n        {\r\n            profile: state.profilePage.profile,\r\n            status: state.profilePage.status,\r\n            authorizedUserId: state.auth.userId,\r\n            isAuth: state.auth.isAuth,\r\n        })\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter\r\n)(ProfileContainer);\r\n\r\n"],"names":["props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","reduxForm","form","handleSubmit","profile","error","onSubmit","className","style","createField","Input","type","Textarea","Object","keys","contacts","map","key","s","ProfileData","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","Contact","contactTitle","contactValue","savePhoto","saveProfile","Preloader","src","photos","large","userPhoto","target","files","length","initialValues","formData","then","alt","message","likeCount","AddNewPostFormRedux","Field","component","name","placeholder","validate","required","maxLength10","MyPosts","React","postsElements","posts","reverse","p","id","values","addPost","newPostText","maxLengthCreator","connect","state","profilePage","dispatch","addPostActionCreator","owner","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","compose","auth","isAuth","withRouter"],"sourceRoot":""}